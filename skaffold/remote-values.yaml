## skaffold helm deploy requires the image key
app:
  enabled: true
  image:
    pullPolicy: Always
    tag: "skaffold-dev"
  replicaCount: 1
  service:
    ports:
      - servicePort: 80
        targetContainerPortName: http
      - servicePort: 5055
        targetContainerPortName: reloader
  ingress:
    enabled: false
    ingressClassName: "nginx"
    #annotations:
    #  cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: nomad.k8s.example.com
      - host: nomad.reloader.k8s.example.com
        optSvcPort: 5055
    #tls:
    #  - hosts:
    #      - nomad.k8s.example.com
    #      - nomad.reloader.k8s.example.com
    #    secretName: nomad-tls
  containerPorts:
    - name: http
      port: 80
    - name: reloader
      port: 5055
  lifecyclePostStartCommand:
    ["/bin/sh", "-c", "npm run reloader >> /var/log/hotreload.log 2>&1 &"]
  volumeMounts:
    - name: shared-logs
      mountPath: /var/log
      mountType:
        emptyDir: {}
  additionalContainers:
    - name: hotreload-logger
      image: busybox
      command: ["/bin/sh", "-c",
        "while [ ! -f /var/log/hotreload.log ]; do sleep 5; done; \
         tail -f /var/log/hotreload.log"
      ]
      volumeMounts:
        - name: shared-logs
          mountPath: /var/log
  configMapData:
    DEV_DATABASE_URL_ORIGIN: "mongodb://nomad-db:27017"
    DEV_ENV:   "true"
    ENABLE_DB: "false"
    LIVE_RELOADER_PORT: 5055
    LOG_EVERY_NUM_CHECKS: 5
    #PM2_TZ: "America/Los_Angeles"
db:
  enabled: false
  replicaCount: 1
  image:
    repository: mongo
    pullPolicy: IfNotPresent
    tag: 4.4.6
  #command: ["mongod", "-f", "/etc/mongo/mongod.conf"]
  service:
    ports:
      - servicePort: 27017
        targetContainerPortName: mongo
  ingress:
    enabled: false
  containerPorts:
    - name: mongo
      port: 27017
  containerProbe:
    enabled: true
    type: tcp
    port: mongo
    probes:
      livenessProbe:
        failureThreshold: 5
        periodSeconds: 15
      readinessProbe:
        failureThreshold: 2
        periodSeconds: 15
  useStatefulSet: true
  persistence:
    statefulset:
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Delete
  volumeClaimMounts:
    - mountPath: /data/db
      subPath: db
  secretStringData:
    MONGO_INITDB_DATABASE: mongo
